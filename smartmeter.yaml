# ESPHome configuration for the smartmeter project.
# https://esphome.io/index.html
esphome:
  name: smartmeter
  friendly_name: Smartmeter
  area: Heating room
  project:
    name: "BlueAndi.smartmeter"
    version: "0.3.0"
  on_boot:
    then:
      # Restore the total pulses from the last session.
      - pulse_meter.set_total_pulses:
          id: power_consumption_home
          value: !lambda "return id(total_pulses_home);"
      - pulse_meter.set_total_pulses:
          id: power_consumption_heatpump
          value: !lambda "return id(total_pulses_heatpump);"
  on_shutdown:
      then:
        # Save the total pulses to the global variable.
        - globals.set:
            id: total_pulses_home
            value: !lambda 'return id(power_consumption_home).state;'
        - globals.set:
            id: total_pulses_heatpump
            value: !lambda 'return id(power_consumption_heatpump).state;'

# Platform configuration.
# https://esphome.io/components/esp32.html
esp32:
  board: esp32-poe-iso
  framework:
    type: arduino

# Enable logging.
# https://esphome.io/components/logger.html
logger:
  level: DEBUG

# Enable Home Assistant API.
# https://esphome.io/components/api.html
api:
  password: ""
  reboot_timeout: 0s # If you enable MQTT and you do not use the Native API Component, you must set reboot_timeout: 0s, otherwise the ESP will reboot every 15 minutes because no client connected to the native API.
  actions:
    - action: set_total_home
      variables:
        new_total: int
      then:
        - pulse_meter.set_total_pulses:
            id: power_consumption_home
            value: !lambda 'return new_total;'
    - action: set_total_heatpump
      variables:
        new_total: int
      then:
        - pulse_meter.set_total_pulses:
            id: power_consumption_heatpump
            value: !lambda 'return new_total;'

# Enable OTA updates.
# https://esphome.io/components/ota.html
ota:
  - platform: esphome
    password: ""

# Enable ethernet interface.
# https://esphome.io/components/ethernet.html
ethernet:
  type: LAN8720
  mdc_pin: GPIO23
  mdio_pin: GPIO18
  clk:
    pin: GPIO17
    mode: CLK_OUT
  phy_addr: 0
  power_pin:
    number: GPIO12
    ignore_strapping_warning: true

# Webserver configuration
# https://esphome.io/components/web_server.html
web_server:
  port: 80
  version: 3
  sorting_groups:
    - id: sg_power
      name: "Power"
      sorting_weight: 10
    - id: sg_energy
      name: "Energy"
      sorting_weight: 20
    - id: sg_config
      name: "Configuration"
      sorting_weight: 30

# MQTT configuration
mqtt:
  broker: !secret mqtt_broker
  port: 1883
  username: !secret mqtt_user
  password: !secret mqtt_password
  reboot_timeout: 0s
  birth_message:
    topic: smartmeter/status
    payload: "online"
  will_message:
    topic: smartmeter/status
    payload: "offline"

# Global variables
# https://esphome.io/components/globals.html
globals:
  - id: total_pulses_home
    type: int
    restore_value: yes
  - id: total_pulses_heatpump
    type: int
    restore_value: yes

# Preferences
# https://esphome.io/components/esphome.html#adjusting-flash-writes
preferences:
  flash_write_interval: 5min

# Sensor configuration
# https://esphome.io/components/sensor/index.html
sensor:
  - platform: pulse_meter
    pin: GPIO14
    name: "Power Consumption Home"
    id: power_consumption_home
    unit_of_measurement: "W"
    device_class: power
    state_class: measurement
    internal_filter: 200ms # Assuming maximum load of 16 kW and 1000 impulses per kWh, any pulses faster than 225 ms would exceed load. -10% ~= 20 ms.
    accuracy_decimals: 0
    filters:
      - multiply: 60 # (60s / impulse constant) * (1000W / 1kW)
    total:
          name: "Energy Consumption Home"
          web_server:
            sorting_group_id: sg_energy
            sorting_weight: 10
    web_server:
      sorting_group_id: sg_power
      sorting_weight: 10

  - platform: pulse_meter
    pin: GPIO15
    name: "Power Consumption Heatpump"
    id: power_consumption_heatpump
    unit_of_measurement: "W"
    device_class: power
    state_class: measurement
    internal_filter: 200ms # Assuming maximum load of 16 kW and 1000 impulses per kWh, any pulses faster than 225 ms would exceed load. -10% ~= 20 ms.
    accuracy_decimals: 0
    filters:
      - multiply: 60 # (60s / impulse constant) * (1000W / 1kW)
    total:
          name: "Energy Consumption Heatpump"
          web_server:
            sorting_group_id: sg_energy
            sorting_weight: 20
    web_server:
      sorting_group_id: sg_power
      sorting_weight: 20

# Button configuration
# https://esphome.io/components/button/index.html
button:
  - platform: template
    id: zero_power_consumption_home
    name: "Reset power consumption home"
    icon: mdi:button-pointer
    on_press:
      then:
         - pulse_meter.set_total_pulses:
              id: power_consumption_home
              value: 0
    web_server:
      sorting_group_id: sg_config
      sorting_weight: 10

  - platform: template
    id: zero_power_consumption_heatpump
    name: "Reset power consumption heatpump"
    icon: mdi:button-pointer
    on_press:
      then:
         - pulse_meter.set_total_pulses:
              id: power_consumption_heatpump
              value: 0
    web_server:
      sorting_group_id: sg_config
      sorting_weight: 20
